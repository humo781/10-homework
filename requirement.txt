Boshlang'ich sozlamalar
1. gitinore sozlash
2. venv yaratish va aktivatsiya qilish
3. django o'rnatish
4. config nomli proyekt yaratish 9-homework loyihani ichida
5. git add .gitignore, git commit -m "", git push origin main qilish (venv dan oldin yuborib qo'yish)
6. python manage.py createsuperuser (agar admin panelga kirishga to'g'ri kelib qolsa xar ehtimol)

Loyihaning config sozlamalari
1. notes, tasks app larini yaratish
2. config/settings.py da notes, tasks applarini installed_apps ga qo'shish
3. config/settings.py da templates manzilini BASE_DIR orqali berish
4. config/settings.py timezone ni 'Asia/Tashkent' ga to'g'irlash
5. config/settings.py da static faylini sozlash
6. config/urls.py da home funksiyasini asosiy url ('') ga sozlash
7. config/urls.py da applarning url larini ko'rsatish

/// ASOSIY KOD YOZISH QISMI
1. templates va design directory yaratish
2. templates ni ichida har bir app uchun yana alohida directory yaratish va ularni ichida har bir app uchun list,
form va detail shablonlarini yaratish alohida home.html ham yaratish
3. design ni ichida agar bo'lsa rasm uchun alohida papka va css uchun alohida papka yaratish

// 1-APP NOTES
1. notes/models.py da Note modelini yaratish maydonlari(note_title, content)
    dinamik urllarni oluvchi funksiya yaratish (misol: get_detail_url(self): kabi) detail, update, delete uchun
2. notes/views.py da notes_list nomli funksiya yaratish(vazifasi: userga Note modelidagi datani oladi va barcha notelar
    ro'yxatini ko'rsatadi)
    note_detail nomli funksiya yaratish(vazifasi: listdagi ma'lum notening ma'lumotini ko'rsatadi)
    note_create nomli funksiya yaratish(vazifasi:yangi note yaratadi)
    note_update nomli funksiya yaratish(vazifasi: mavjud noteni yangilaydi)
3. notes app da urls.py yaratish va notes/views.py dagi funsksiyalarga yo'nalish berish

// 2-APP TASKS
1. tasks/models.py da Task modelini yaratish maydonlari(task_title, due_date, description)
    dinamik urllarni oluvchi funksiya yaratish (misol: get_detail_url(self): kabi)
2. tasks/views.py da tasks_list nomli funksiya yaratish(vazifasi: userga Task modelidagi datani oladi va barcha sportlar
    ro'yxatini ko'rsatadi)
    task_detail nomli funksiya yaratish(vazifasi: listdagi ma'lum taskning ma'lumotini ko'rsatadi)
    task_create nomli funksiya yaratish(vazifasi: yangi task yaratadi)
    task_update nomli funksiya yaratish(vazifasi: mavjud taskni yangilaydi)
3. tasks app da urls.py yaratish va tasks/views.py dagi funsksiyaga yo'nalish berish

// Jadval yaratish
1. python manage.py makemigrations va python manage.py migrate buyruqlari orqali modellarni ma'lumotlar bazasiga qoshish

// Template yozish
2. Templates dagi tasks, notes papkalariga list, form, detail shablonlarini yaratish va html tag yozib
    user ko'radigan sahifani chiroyliroq chiqarish

// git rm -r --cached .idea (.idea ketib qolsa o'chirish uslubi, --cached mahalliy diskdagi fayllarni o'chirmaydi,
faqat Git kuzatuvidan olib tashlaydi)

/// ESLATMA:
